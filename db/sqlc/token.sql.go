// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: token.sql

package db

import (
	"context"
)

const addToken = `-- name: AddToken :one
INSERT INTO tokens_contract (contract_id, name, symbol, address, decimals)
VALUES ($1, $2, $3, $4, $5)
RETURNING id, contract_id, name, symbol, address, decimals, updated_at
`

type AddTokenParams struct {
	ContractID int64  `json:"contract_id"`
	Name       string `json:"name"`
	Symbol     string `json:"symbol"`
	Address    string `json:"address"`
	Decimals   int64  `json:"decimals"`
}

func (q *Queries) AddToken(ctx context.Context, arg AddTokenParams) (TokensContract, error) {
	row := q.db.QueryRowContext(ctx, addToken,
		arg.ContractID,
		arg.Name,
		arg.Symbol,
		arg.Address,
		arg.Decimals,
	)
	var i TokensContract
	err := row.Scan(
		&i.ID,
		&i.ContractID,
		&i.Name,
		&i.Symbol,
		&i.Address,
		&i.Decimals,
		&i.UpdatedAt,
	)
	return i, err
}

const deleteToken = `-- name: DeleteToken :exec
DELETE
FROM tokens_contract
WHERE id = $1
`

func (q *Queries) DeleteToken(ctx context.Context, id int64) error {
	_, err := q.db.ExecContext(ctx, deleteToken, id)
	return err
}
